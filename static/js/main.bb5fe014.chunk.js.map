{"version":3,"sources":["components/Header.jsx","utils/data.js","components/Jumbotron.jsx","components/SocialLinks.jsx","components/AboutMe.jsx","components/Home.jsx","components/ImageCard.jsx","components/ProjectDetail.jsx","components/modal/PhotoModal.jsx","components/Projects.jsx","components/resume/DevSkills.jsx","components/resume/Experience.jsx","components/resume/Project.jsx","components/Resume.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js","utils/resumeData.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","window","addEventListener","position","header","document","getElementById","scrolled","body","scrollTop","documentElement","setTimeout","classList","add","remove","element","trigger","contains","react_default","a","createElement","Navbar","id","className","sticky","expand","variant","bg","Brand","href","react_router_dom","exact","activeClassName","to","Component","data","jumboPhotos","homeJumbo","photographer","filepath","link","projectJumbo","resumeJumbo","projects","title","description","techStack","imgSrc","projectUrl","Jumbotron","_ref","imageSrc","photoBy","imgUrl","Container","fluid","style","backgroundImage","concat","SocialLinks","popover","Popover","OverlayTrigger","placement","overlay","AboutMe","alt","Home","photo","ImageCard","viewProject","index","onClick","ProjectDetail","projectImages","PhotoModal","getElementsByClassName","data-image-index","e","display","App","state","_this2","scrollRef","React","createRef","techSkills","map","skill","key","src","data-image-src","target","dataset","showModal","setState","scrollCards","scrollPx","ref","scrollLeft","projectCards","project","shortDescription","length","slice","PhotoModal_PhotoModal","current","textAlign","DevSkills","devSkill","Experience","job","responsibilities","item","company","duration","organization","address","Project","stack","tech","Resume","formatWorkExp","workExperience","formatVolunteerExp","volunteerExperience","formatDevSkills","devSkills","formatEducation","education","school","formatProjects","formatInterests","interests","interest","Col","class","download","contactInfo","email","number","website","github","linkedin","aboutMe","lg","sm","Footer","basename","process","Header_Header","react_router","path","component","Projects","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister","module","exports","otherSkills"],"mappings":"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AAY,+CAEd,CACEJ,MAAO,UACPC,YACE,wjBACFC,UAAW,CAAC,SAAU,aAAc,QACpCC,OAAQ,GACRC,WAAY,uCAEd,CACEJ,MAAO,SACPC,YACE,qwBACFC,UAAW,CACT,eACA,aACA,OACA,SACA,UACA,OACA,iBAEFC,OAAQ,CACN,6BACA,oCACA,sCAEFC,WAAY,uCAIhBiF,UAAW,CACT,CACErF,MAAO,kBACPuE,SAAU,sBACVH,iBAAkB,CAAC,8BAErB,CACEpE,MAAO,0BACPuE,SAAU,uBACVH,iBAAkB,CAAC,wDAIvBe,UAAW,CACT,OACA,sBACA,aACA,SACA,aACA,aACA,UACA,WACA,MACA,kBACA,gBACA,QACA,SACA,aACA,UACA,UAGF2C,YAAa,CACX,aACA,kBACA,gBACA,yBACA,SAGF/C,eAAgB,CACd,CACE/E,MAAO,oBACPsE,QAAS,qBACTG,QAAS,yCACTF,SAAU,yBACVH,iBAAkB,CAChB,qFACA,qJACA,+HACA,4HACA,gGACA,wEAGJ,CACEpE,MAAO,qBACPsE,QAAS,gBACTG,QAAS,4CACTF,SAAU,wBACVH,iBAAkB,CAChB,kFACA,oGACA,6EACA,gHACA,6FACA,yEACA,yHAGJ,CACEpE,MAAO,gCACPsE,QAAS,4BACTG,QAAS,sCACTF,SAAU,sBACVH,iBAAkB,CAChB,iHACA,mGACA,8FACA,mIACA,+JACA,gHAKNa,oBAAqB,CACnB,CACEjF,MAAO,cACPsE,QAAS,4BACTG,QAAS,gBACTF,SAAU,2BACVH,iBAAkB,IAEpB,CACEpE,MAAO,uBACPsE,QAAS,0BACTG,QAAS,cACTF,SAAU,2BACVH,iBAAkB,IAEpB,CACEpE,MAAO,wBACPsE,QAAS,mCACTG,QAAS,yBACTF,SAAU,6BACVH,iBAAkB,IAEpB,CACEpE,MAAO,QACPsE,QAAS,mCACTG,QAAS,mBACTF,SAAU,2BACVH,iBAAkB,KAItBqB,UAAW,CACT,gBACA,SACA,UACA,WACA,aACA","file":"static/js/main.bb5fe014.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport { Navbar } from 'react-bootstrap';\n\nexport default class Header extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount = () => {\n    // Navbar menu-btns toggle for mobile\n    const toggleMobileMenu = () => {\n      let element = document.getElementById('menu-btns');\n      let trigger = document.getElementById('collapse-toggle');\n      if (element.classList.contains(\"css-show\")) {\n        element.classList.remove(\"css-show\");\n        trigger.classList.remove(\"toggled\");\n      } else {\n        element.classList.add(\"css-show\");\n        trigger.classList.add(\"toggled\");\n      }\n    }\n\n    // Navbar scroll change in css\n    const getScrollPos = () => {\n      let header = document.getElementById('main-nav');\n      let scrolled = true;\n      let position;\n      function scroll() {\n        if (scrolled) {\n          scrolled = false;\n          position = document.body.scrollTop || document.documentElement.scrollTop;\n          setTimeout(() => {\n            scrolled = true;\n          }, 100);\n        }\n      }\n      scroll();\n      if (position > 100) {\n        header.classList.add(\"scrolled\");\n      } else {\n        header.classList.remove(\"scrolled\");\n        \n      }\n    }\n\n    window.addEventListener('scroll', getScrollPos, true);\n    document.getElementById('collapse-toggle').addEventListener('click', toggleMobileMenu, true);\n  }\n\n  render() {\n    return (\n      <Navbar id=\"main-nav\" className=\"nav-container\" sticky=\"top\" expand=\"lg\" variant=\"light\" bg=\"light\">\n        <Navbar.Brand className=\"nav-logo\" href=\"#\">CODEBERT</Navbar.Brand>\n        <div id=\"menu-btns\" className=\"navigation\">\n          <NavLink className=\"nav-button\" exact activeClassName=\"active\" to=\"/\">Home</NavLink>\n          <NavLink className=\"nav-button\" activeClassName=\"active\" to=\"/projects\">Projects</NavLink>\n          <NavLink className=\"nav-button\" activeClassName=\"active\" to=\"/resume\">Resume</NavLink>\n        </div>\n        <i id=\"collapse-toggle\" className=\"fas fa-bars fa-lg\"></i>\n      </Navbar>\n    );\n  }\n}","export default {\n  // Site jumbotron photos\n  jumboPhotos: {\n    homeJumbo: {\n      photographer: \"Nate Grant\",\n      filepath: \"images/home-jumbo.jpg\",\n      link: \"https://unsplash.com/@nateggrant\",\n      header: \"About\",\n    },\n    projectJumbo: {\n      photographer: \"Galymzhan Abdugalimov\",\n      filepath: \"images/project-jumbo.jpg\",\n      link: \"https://unsplash.com/@naffiq\",\n      header: \"Projects\",\n    },\n    resumeJumbo: {\n      photographer: \"Clark Young\",\n      filepath: \"images/resume-jumbo.jpg\",\n      link: \"https://unsplash.com/@cbyoung\",\n      header: \"Resume\",\n    },\n  },\n\n  // Project mock data\n  projects: [\n    {\n      title: \"Flooding\",\n      description:\n        \"Climate change is a real threat and as a developer, I wanted to create something that can share the impacts of rising water levels on our coastal cities. Using MapboxGL, custom layers, and React, this quick client-side project provides users a visual layout of the effects of rising water levels. Explore the map and see what areas are at risk of flooding based on 10 meter incremental rises in our ocean water levels.\",\n      techStack: [\"React\", \"TypeScript\", \"MapboxGL\"],\n      imgSrc: [\n        \"images/projects/flooding-1.png\",\n        \"images/projects/flooding-2.png\",\n      ],\n      projectUrl: \"https://github.com/bert-bae/flooding\",\n    },\n    {\n      title: \"Starwars-Scroll\",\n      description:\n        \"Starwars scroll mimmicks the popular StarWars film's introductions. The simple UI and backend is created using React, DynamoDB, and Lambdas. The site is deployed on S3 with the serverside being deployed using AWS SAM which uses Cloudformation. Create and edit your own story and if you want to share it, create a shareable link that you can send to your friends. The links are stored temporarily for 7 days allowing you to send messages to friends in a fun way.\",\n      techStack: [\n        \"NodeJs\",\n        \"React\",\n        \"DynamoDB\",\n        \"AWS Lambdas\",\n        \"AWS SAM\",\n        \"Cloudfront/S3\",\n        \"Serverless\",\n      ],\n      imgSrc: [\n        \"images/projects/starcrawl-1.png\",\n        \"images/projects/starcrawl-2.png\",\n        \"images/projects/starcrawl-3.png\",\n      ],\n      projectUrl: \"https://github.com/bert-bae/starwars-scroll\",\n    },\n    {\n      title: \"Scraper\",\n      description:\n        \"Scraper is a simple tool built while practicing Typescript. By supplying a YAML configuration file with the scraping paths, instructions, and the site URL (serverside rendered sites only as a part of this demo), Scraper will grab the data and format it in a clean JSON format based on the configuration provided. The YAML configuration allows you to create repeatable instructions for the program to pull information from a site in the same format every time. Perfect for repeating cron jobs to pull information from a site on a scheduled time or for one time uses.\",\n      techStack: [\"NodeJs\", \"TypeScript\", \"Jest\"],\n      imgSrc: [],\n      projectUrl: \"https://github.com/bert-bae/scraper\",\n    },\n    {\n      title: \"NuBrew\",\n      description:\n        \"NuBrew is an application that allows users to vote on their craft beer drinks and keep track of favorited drinks over time. As users expand their set of craft beers tried over time, the application will provide recommendations based on their previous likes based on IBU and category/style of drink. Of course, users need to be able to take that plunge and explore uncharted territories by trying something new by random as well, even if they really don't like that one style, taste changes over time!\\n\\nWe want to make it as easy as possible, so for those that bought their drinks with labels, the application was created while experimenting machine learning and label recognition using Google AutoML Vision.\\n\\nIn collaboration with Adam Romeo (https://adamromeo.dev/)\",\n      techStack: [\n        \"React-Native\",\n        \"PostgreSql\",\n        \"Knex\",\n        \"NodeJS\",\n        \"Express\",\n        \"SaSS\",\n        \"Google AutoML\",\n      ],\n      imgSrc: [\n        \"images/projects/nubrew.png\",\n        \"images/projects/nubrewExample.gif\",\n        \"images/projects/nubrewExample2.gif\",\n      ],\n      projectUrl: \"https://github.com/bert-bae/nubrew\",\n    },\n    {\n      title: \"ChattyApp\",\n      description:\n        \"This is a Chat application that was created as a part of Lighthouse Lab's program while learning and experimenting with React and Websockets. You can connect with others on the local network via websockets to have a conversation! Domain specific languages were implemented as experimentation as well as logic to allow emojis, images, and username modification.\\n\\nNot crazy, but interesting first step learning React with Websockets!\",\n      techStack: [\n        \"NodeJS\",\n        \"Javascript\",\n        \"React\",\n        \"Websockets\",\n        \"Express\",\n        \"SaSS\",\n      ],\n      imgSrc: [\n        \"images/projects/chatty1.png\",\n        \"images/projects/chatty2.png\",\n        \"images/projects/chatty3.png\",\n        \"images/projects/chatty4.png\",\n      ],\n      projectUrl: \"https://github.com/bert-bae/chattyapp\",\n    },\n    {\n      title: \"Red Square\",\n      description:\n        \"As a rushed one week challenge, a group of us created an event creation platform for users to share their events by link for users to vote on their available times (copy of doodle).\\n\\nIn partnership with Dawson Ley (https://github.com/Anarchonist7) and Mark Barlescu.\",\n      techStack: [\n        \"Javascript\",\n        \"jQuery\",\n        \"PostgreSql\",\n        \"Knex\",\n        \"EJS\",\n        \"Express\",\n        \"Ajax\",\n        \"SaSS\",\n      ],\n      imgSrc: [\n        \"images/projects/rs1.png\",\n        \"images/projects/rs2.png\",\n        \"images/projects/rs3.png\",\n        \"images/projects/rs4.png\",\n        \"images/projects/rs5.png\",\n      ],\n      projectUrl: \"https://github.com/bert-bae/outdoodle\",\n    },\n    {\n      title: \"Colinkz Media\",\n      description:\n        \"Colinkz is founded by Noi Soudarack. It is intended to be a platform for communities to connect with other cultural groups by providing access to events, restaurants, and directories to local organizations for many cultural groups. As a software developer for Colinkz, I worked closely with the founder, CTO, and designers to develop and maintain existing and new features for the company website.\\n\\nIf interested, learn more about what we do and support our goal of increasing multicultural diversity across the world!\\n\\n Link:  https://www.colinkz.com\",\n      techStack: [\n        \"Unfortunately this information cannot be released as it is the intellectual property of the organization!\",\n      ],\n      imgSrc: [\n        \"images/projects/colinkz1.jpg\",\n        \"images/projects/colinkz2.jpg\",\n        \"images/projects/colinkz3.jpg\",\n        \"images/projects/colinkz-logo.png\",\n      ],\n      projectUrl: \"https://www.colinkz.com\",\n    },\n  ],\n};\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\n\nexport default function Jumbotron({ imageSrc, photoBy, imgUrl, header }) {\n  return (\n    <Container className=\"jumbotron-images\" fluid>\n      <div className=\"img-overflow\">\n        <Container className=\"jumbo\" fluid style={{backgroundImage: `url(${imageSrc})`}}></Container>\n        <h1 className=\"jumbotron-header\">{ header }</h1>\n        <a href={imgUrl}>\n          <div className=\"photo-credit\">\n            <p className=\"miniheader\">Photo by: {photoBy}</p>\n            <p className=\"miniheader\">Unsplashed Link</p>\n          </div>\n        </a>\n      </div>\n    </Container>\n  )\n}","import React from 'react';\nimport { Container, OverlayTrigger, Popover } from 'react-bootstrap';\n\nexport default function SocialLinks() {\n  const popover =  (\n    <Popover id=\"contact-popover\" title=\"Contact Information\">\n      <Container className=\"contact-container\">\n        <Container className=\"section-container container-column\">\n          <p className=\"sectionheader\">Personal Email</p>\n          <a className=\"content-text\" href={`mailto:elbert.bae@gmail.com?Subject=Mail%20from%20CodeBert`}>elbert.bae@gmail.com</a>\n        </Container>\n        <Container className=\"section-container container-column\">\n          <p className=\"sectionheader\">Work Email</p>\n          <a className=\"content-text\" href=\"mailto:elbert@colinkz.com?Subject=Tell%20me%20about%20Colinkz!\">elbert@colinkz.com</a>\n        </Container>\n        <Container className=\"section-container container-column\">\n          <p className=\"sectionheader\">Phone</p>\n          <p className=\"content-text\">(778)-908-0350</p>\n        </Container>\n      </Container>\n    </Popover>\n  )\n  return (\n    <div className=\"contact-container\">\n      <div className=\"center contact-icon\">\n        <a className=\"profile-icons\" href=\"https://github.com/bert-bae\">\n          <span className=\"fa-stack\">\n            <i className=\"circle-rotate fas fa-circle-notch fa-stack-2x\"></i>\n            <i className=\"circle-rotate-slow fab fa-github fa-stack-1x\"></i>\n          </span>\n        </a>\n      </div>\n      <div className=\"center contact-icon\">\n      <a className=\"profile-icons\" href=\"https://www.linkedin.com/in/bert92/\">\n        <span className=\"fa-stack\">\n          <i className=\"circle-rotate fas fa-circle-notch fa-stack-2x\"></i>\n          <i className=\"circle-rotate-slow fab fa-linkedin-in fa-stack-1x\"></i>\n        </span>\n      </a>\n      </div>\n      <div className=\"center contact-icon contact-card\">\n        <OverlayTrigger \n          trigger=\"click\" \n          placement=\"top\" \n          overlay={popover}>\n          <span className=\"fa-stack profile-icons contact-info\">\n            <i className=\"circle-rotate fas fa-circle-notch fa-stack-2x\"></i>\n            <i className=\"circle-rotate-slow fas fa-user-circle fa-stack-1x\"></i>\n          </span>\n        </OverlayTrigger>\n      </div>\n    </div>\n  )\n}","import React from \"react\";\nimport SocialLinks from \"./SocialLinks\";\n\nexport default function AboutMe() {\n  return (\n    <div className=\"about-me-container\">\n      <div className=\"highlight-container\">\n        <div\n          className=\"highlight-image odd\"\n          style={{ backgroundImage: `url(images/home-1.jpg)` }}\n        ></div>\n        <div className=\"highlight-content\">\n          <p className=\"subheader\">About Me</p>\n          <p className=\"content\">\n            My name is Elbert Bae and I am a currently full-stack NodeJS\n            developer, but experimenting with other languages on the side. I\n            have a particular interest in user experience and responsive design,\n            but find it fascinating how data can be analyzed to meet the user\n            and client needs. Having worked in customer service, sales,\n            training, and management in the past, my experience drives me\n            towards creating efficient workflows that improve the experience of\n            organizations and customers. Achievable through simple, elegant\n            designs, and intuitive user experiences!\n          </p>\n        </div>\n      </div>\n\n      <div className=\"highlight-container\">\n        <div className=\"highlight-content\">\n          <p className=\"subheader\">My Journey</p>\n          <p className=\"content\">\n            I too was once a child... And thought coding was magic. My most\n            notable experience prior to development is management with the\n            YMCA's customer service and sales teams. Having lead and worked in a\n            challenging and fulfilling role motivated me to continue learning\n            about the tools that can and will improve the challenges of a\n            chaotic day-to-day operation. With a background in Psychology and\n            Business from Simon Fraser University, I focus on the experience of\n            users and customers on driving business growth and development.\n            Something that is a core driver in why I began my path into software\n            development.\n          </p>\n        </div>\n        <div\n          className=\"highlight-image even\"\n          style={{ backgroundImage: `url(images/home-2.jpg)` }}\n        ></div>\n      </div>\n\n      <div className=\"highlight-container\">\n        <div\n          className=\"highlight-image odd\"\n          style={{ backgroundImage: `url(images/home-3.jpg)` }}\n        ></div>\n        <div className=\"highlight-content\">\n          <p className=\"subheader\">Present Role</p>\n          <p className=\"content\">\n            Market Insight Research <br />\n            <br /> As a part of Rival Technologies software engineering team, I\n            work alongside market researchers on our market research tool. No\n            one enjoys lengthy email surveys, so create a conversational one\n            with Rival Technologies application. We create tools for market\n            researchers that enable them to engage with the consumers to get\n            better insight into their customers.\n            <a\n              href=\"https://www.rivaltech.com/\"\n              alt=\"Link to Rival Tecnologies\"\n            >\n              Check it out!\n            </a>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\n\nimport data from '../utils/data';\nimport Jumbotron from './Jumbotron';\nimport SocialLinks from './SocialLinks';\nimport AboutMe from './AboutMe';\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    const photo = data.jumboPhotos.homeJumbo;\n    return (\n      <div className=\"home-container\">\n        <Jumbotron imageSrc={photo.filepath} photoBy={photo.photographer} imgUrl={photo.link} header={data.jumboPhotos.homeJumbo.header}/>\n        <AboutMe imgSrc={\"/images/home-img1.jpg\"}/>\n      </div>\n    )\n  } \n}","import React from 'react';\n\nexport default function ImageCard({title, description, imgSrc, viewProject, index}) {\n  return (\n    <div className=\"view-project\" onClick={() => { viewProject(index); }} alt=\"View project details\">\n      <div className=\"card-container\">\n        <div className=\"card-overflow\">\n          <div className=\"card-image\" style={{backgroundImage: `url(${imgSrc})`}}></div>\n        </div>\n        <div className=\"card-content\">\n          <p className=\"card-title\">{title}</p>\n          <p className=\"card-description\">{description}</p>\n        </div>\n      </div>\n    </div>\n  )\n}","import React from 'react';\n\nexport default function ProjectDetail({ title, description, techStack, projectImages}) {\n  return (\n    <div className=\"project-details section-container container-column\">\n      <div className=\"inner-container\">\n        <div className=\"content-description\">\n          <h1 className=\"mainheader\">{title}</h1>\n          <p className=\"content-text\">{description}</p>\n        </div>\n        <div className=\"content-tech\">\n          <h1 className=\"mainheader\">Tech Stack</h1>\n          <ul className=\"content-text\">\n            {techStack}\n          </ul>\n        </div>\n      </div>\n      <div className=\"content-images\">\n        <h1 className=\"mainheader\">Images</h1>\n        <div className=\"images-container\">\n          {projectImages}\n        </div>\n      </div>\n    </div>\n  )\n}","import React, { Component } from 'react';\n\nexport default class PhotoModal extends Component {\n  constructor(props) {\n    super(props)\n  }\n  render() {\n    const modal = document.getElementsByClassName('modal-photo')[0];\n    const closeModal = (e) => {\n      let modal = document.getElementById(\"photo-modal\");\n      modal.style.display = \"none\";\n    }\n    const nextImage = (e) => {\n      let index = modal.dataset.imageIndex + 1;\n      let currentImage = document.getElementsByClassName('project-image')[index];\n      modal.style.backgroundImage = `url(\"${currentImage.dataset.imageSrc}\")`;\n    }\n    const prevImage = (e) => {\n      let index = modal.dataset.imageIndex - 1;\n      let currentImage = document.getElementsByClassName('project-image')[index];\n      modal.style.backgroundImage = `url(\"${currentImage.dataset.imageSrc}\")`;\n    }\n    return (\n      <div id=\"photo-modal\" className=\"modal modal-background\">\n        <div className=\"modal-content\">\n          <div className=\"modal-photo\" data-image-index=\"null\" style={{ backgroundImage: `url(\"${this.props.imageSrc})`}}>\n            <div className=\"modal-close\" onClick={(e) => { closeModal(e) }}>Close</div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\n\nimport data from '../utils/data';\nimport Jumbotron from './Jumbotron';\nimport ImageCard from './ImageCard';\nimport ProjectDetail from './ProjectDetail';\nimport PhotoModal from './modal/PhotoModal';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: null,\n      description: null,\n      techStack: null,\n      projectImages: null,\n    }\n  }\n \n  render() {\n    const scrollRef = React.createRef();\n    const photo = data.jumboPhotos.projectJumbo;\n    \n    // Clicking on a card... trigger state change\n    function showModal(e) {\n      let src = e.target.dataset.imageSrc;\n      document.getElementsByClassName('modal-photo')[0].style.backgroundImage = `url(\"${src}\")`;\n      document.getElementById('photo-modal').style.display = \"block\";\n    }\n    const viewProject = (index) => {\n      let techSkills = data.projects[index].techStack.map((skill, index) => {\n        return (\n          <li key={index}>{skill}</li>\n        )\n      })\n      let projectImages = data.projects[index].imgSrc.map((src, index) => {\n        return (\n          <div className=\"project-image\" data-image-src={src} style={{backgroundImage: `url(${src})`}} key={index} onClick={function(e) { showModal(e); }}></div>\n        )\n      });\n      this.setState({\n        title: data.projects[index].title,\n        description: data.projects[index].description,\n        techStack: techSkills,\n        projectImages: projectImages,\n      });\n    }\n\n    // Scrolls the project card section\n    const scrollCards = (scrollPx, ref) => {\n      ref.scrollLeft += scrollPx;\n    }\n\n    // Pull data from project list and convert to cards\n    const projectCards = data.projects.map((project, index) => {\n      let shortDescription;\n      if (project.description.length > 100) {\n        shortDescription = project.description.slice(0, 100) + \"...\";\n      }\n      return (\n        <ImageCard \n          title={project.title} \n          description={shortDescription} \n          imgSrc={project.imgSrc[0]} \n          viewProject={viewProject}\n          index={index}\n          key={index}/>\n      )\n    })\n    return (\n      <div className=\"projects-container\">\n        <Jumbotron imageSrc={photo.filepath} photoBy={photo.photographer} imgUrl={photo.link} header={data.jumboPhotos.projectJumbo.header}/>\n        <PhotoModal></PhotoModal>\n        <div className=\"project-cards\">\n          <div className=\"scroll-container\" ref={scrollRef}>\n            { projectCards }\n          </div>\n          <div className=\"control right-container\" onClick={() => { scrollCards(258, scrollRef.current) }}>\n            <i className=\"arrow right-control\"></i>\n          </div>\n          <div className=\"control left-container\"  onClick={() => { scrollCards(-258, scrollRef.current) }}>\n            <i className=\"arrow left-control\"></i>\n          </div>\n        </div>\n        {!this.state.title && \n          <div className=\"project-details section-container container-column\">\n            <h3 style={{textAlign: \"center\"}}>Click a card to view project details.</h3>\n          </div>        \n        }\n        {this.state.title &&\n          <ProjectDetail \n            title={this.state.title}\n            description={this.state.description}\n            techStack={this.state.techStack}\n            projectImages={this.state.projectImages}\n            ></ProjectDetail>\n        }\n      </div>\n    )\n  }\n}","import React from \"react\";\n\nexport default function DevSkills({ devSkill }) {\n  return (\n    <div className=\"dev-skill\">\n      <li>{devSkill}</li>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\n\nexport default function Experience({ job }) {\n  const responsibilities = job.responsibilities.map((item, index) => {\n    return (\n      <li key={\"res\" + index}>{item}</li>\n    )\n  })\n  return (\n    <div className=\"resume-content\">\n      <div className=\"resume-header\">\n        <p className=\"job-title\">{job.title}<span className=\"company-name\">{job.company && \", \" + job.company}</span></p>\n        <p className=\"job-duration\">{job.duration}</p>\n      </div>\n      {job.organization || job.address && \n        <p className=\"job-organization\">{job.organization}<span className=\"city\">{job.address}</span></p>\n      }\n      <div className=\"responsibilities-container\">\n        <ul>\n          {responsibilities}\n        </ul>\n      </div>\n    </div>\n  )\n}","import React from 'react';\n\nexport default function Project({ project }) {\n  const stack = project.techStack.map((tech) => {\n    return (\n      <li>{tech}</li>\n    )\n  })\n  return (\n    <div className=\"resume-content\">\n      <div className=\"resume-header\">\n        <p className=\"project-title\">{project.title}<a className=\"link-to-repo\" href={project.projectUrl}>Github Repo</a></p>\n      </div>\n      <div className=\"project-details-container\">\n        <div className=\"project-description\">\n          <p className=\"sectionheader\">Description</p>\n          <p className=\"content\">{project.description}</p>\n        </div>\n        <div className=\"project-tech\">\n          <p className=\"sectionheader\">Tech Stack</p>\n          <ul className=\"content\">{stack}</ul>\n        </div>\n      </div>\n    </div>\n  )\n}","import React, { Component } from \"react\";\nimport { Col } from \"react-bootstrap\";\n\nimport DevSkills from \"./resume/DevSkills\";\nimport Experience from \"./resume/Experience\";\nimport Project from \"./resume/Project\";\n\nimport data from \"../utils/data\";\nimport {\n  workExperience,\n  devSkills,\n  volunteerExperience,\n  education,\n  interests,\n  aboutMe,\n  contactInfo,\n  projects,\n} from \"../utils/resumeData\";\nimport Jumbotron from \"./Jumbotron\";\n\nexport default class Resume extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    const photo = data.jumboPhotos.resumeJumbo;\n    const formatWorkExp = workExperience.map((job, index) => {\n      return <Experience job={job} key={\"exp\" + index} />;\n    });\n    const formatVolunteerExp = volunteerExperience.map((job, index) => {\n      return <Experience job={job} key={\"vol\" + index} />;\n    });\n    const formatDevSkills = devSkills.map((skill, index) => {\n      return <DevSkills devSkill={skill} key={\"skill\" + index}></DevSkills>;\n    });\n    const formatEducation = education.map((school, index) => {\n      return <Experience job={school} key={\"school\" + index} />;\n    });\n    const formatProjects = projects.map((project, index) => {\n      return <Project project={project} key={\"project\" + index} />;\n    });\n    const formatInterests = interests.map((interest, index) => {\n      return <li key={\"interest\" + index}>{interest}</li>;\n    });\n\n    return (\n      <div className=\"resume-container\">\n        <Jumbotron\n          imageSrc={photo.filepath}\n          photoBy={photo.photographer}\n          imgUrl={photo.link}\n          header={data.jumboPhotos.resumeJumbo.header}\n        />\n        <div className=\"section-container container-column\">\n          <Col className=\"subsection bs-column\">\n            <div class=\"name-container\">\n              <h1 class=\"resume-name\">Elbert Bae </h1>\n              <p class=\"desired-title sectionheader\">Software Developer</p>\n              <a\n                class=\"download-resume\"\n                href=\"files/elbert_bae_resume.pdf\"\n                download=\"\"\n              >\n                Download Resume PDF\n              </a>\n            </div>\n            <div className=\"resume-contact-grid\">\n              <div className=\"resume-contact\">\n                <p className=\"contact-text\">\n                  <span className=\"fa-stack\">\n                    <i className=\"circle-rotate fas fa-circle-notch fa-stack-2x\"></i>\n                    <i className=\"circle-rotate-slow fas fa-home fa-stack-1x\"></i>\n                  </span>\n                  <label>{contactInfo.address}</label>\n                </p>\n                <p className=\"contact-text\">\n                  <span className=\"fa-stack\">\n                    <i className=\"circle-rotate fas fa-circle-notch fa-stack-2x\"></i>\n                    <i className=\"circle-rotate-slow far fa-envelope fa-stack-1x\"></i>\n                  </span>\n                  <label>{contactInfo.email}</label>\n                </p>\n                <p className=\"contact-text\">\n                  <span className=\"fa-stack\">\n                    <i className=\"circle-rotate fas fa-circle-notch fa-stack-2x\"></i>\n                    <i className=\"circle-rotate-slow fas fa-phone fa-stack-1x\"></i>\n                  </span>\n                  <label>{contactInfo.number}</label>\n                </p>\n                <a\n                  href={contactInfo.website}\n                  target=\"_blank\"\n                  className=\"contact-text\"\n                >\n                  <span className=\"fa-stack\">\n                    <i className=\"circle-rotate fas fa-circle-notch fa-stack-2x\"></i>\n                    <i className=\"circle-rotate-slow fab fa-chrome fa-stack-1x\"></i>\n                  </span>\n                  <label className=\"link\">Website</label>\n                </a>\n                <a\n                  href={contactInfo.github}\n                  target=\"_blank\"\n                  className=\"contact-text\"\n                >\n                  <span className=\"fa-stack\">\n                    <i className=\"circle-rotate fas fa-circle-notch fa-stack-2x\"></i>\n                    <i className=\"circle-rotate-slow fab fa-github fa-stack-1x\"></i>\n                  </span>\n                  <label className=\"link\">GitHub Profile</label>\n                </a>\n                <a\n                  href={contactInfo.linkedin}\n                  target=\"_blank\"\n                  className=\"contact-text\"\n                >\n                  <span className=\"fa-stack\">\n                    <i className=\"circle-rotate fas fa-circle-notch fa-stack-2x\"></i>\n                    <i className=\"circle-rotate-slow fab fa-linkedin-in fa-stack-1x\"></i>\n                  </span>\n                  <label className=\"link\">LinkedIn Profile</label>\n                </a>\n              </div>\n              <div className=\"resume-about-me\">\n                <h1 className=\"subheader\">About Me</h1>\n                <p className=\"about-me\">{aboutMe}</p>\n              </div>\n            </div>\n          </Col>\n          <Col className=\"subsection bs-column\">\n            <h1 className=\"subheader\">Developer Skills</h1>\n            <Col className=\"skills-container\">{formatDevSkills}</Col>\n          </Col>\n          <Col className=\"subsection bs-column\" lg={12} sm={12}>\n            <h1 className=\"subheader\">Experiences</h1>\n            {formatWorkExp}\n          </Col>\n          <Col className=\"subsection bs-column\" lg={12} sm={12}>\n            <h1 className=\"subheader\">Projects</h1>\n            {formatProjects}\n          </Col>\n          <Col className=\"subsection bs-column\" lg={12} sm={12}>\n            <h1 className=\"subheader\">Volunteer Experience</h1>\n            {formatVolunteerExp}\n          </Col>\n          <Col className=\"subsection bs-column\" lg={12} sm={12}>\n            <h1 className=\"subheader\">Education</h1>\n            {formatEducation}\n          </Col>\n          <Col className=\"subsection  bs-column\" lg={12} sm={12}>\n            <h1 className=\"subheader\">Interests</h1>\n            <ul>{formatInterests}</ul>\n          </Col>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport SocialLinks from './SocialLinks';\n\nexport default function Footer() {\n  return (\n    <div className=\"footer-section\">\n      <div className=\"footer-content\">\n        <p className=\"owner\">&copy; 2019 Elbert Bae</p>\n        <p className=\"content\">Contact information can be found in the following links.</p>\n      </div>\n      <SocialLinks></SocialLinks>\n    </div>\n  )\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './index.css';\n\nimport Header from './components/Header'\nimport Home from './components/Home';\nimport Projects from './components/Projects';\nimport Resume from './components/Resume';\nimport Footer from './components/Footer';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <Header/>\n        <Route exact path=\"/\" component={Home}/>\n        <Route path=\"/projects\" component={Projects}/>\n        <Route path=\"/resume\" component={Resume}/>\n        <Footer/>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n  contactInfo: {\n    address: \"3970 Carrigan Court, Burnaby, BC, V3N 4S5\",\n    email: \"elbert.bae@gmail.com\",\n    number: \"(778) 908-0350\",\n    website: \"https://bert-bae.github.io/my-portfolio\",\n    github: \"https://github.com/bert-bae\",\n    linkedin: \"https://www.linkedin.com/in/bert92/\",\n  },\n\n  aboutMe:\n    \"Full-stack software developer working in the NodeJS environment with experience developing full-stack web applications in NodeJS using Javascript, EJS, Express, Objection, 3rd party APIs, and SQL databases. Experience building with React and NextJS in personal projects, but looking for industry experience to gain further knowledge about best practices. With my current knowledge around MVC architecture and program design, I am familiar with writing clean and scale-able code and always seeking more information to improve my capabilities. Significant experience in management, training, and sales with clear written and spoken communication skills between colleagues and clients mostly in problem resolution focused environments to achieve results.\",\n\n  projects: [\n    {\n      title: \"Flooding\",\n      description:\n        \"Climate change is a real threat and as a developer, I wanted to create something that can share the impacts of rising water levels on our coastal cities. Using MapboxGL, custom layers, and React, this quick client-side project provides users a visual layout of the effects of rising water levels. Explore the map and see what areas are at risk of flooding based on 10 meter incremental rises in our ocean water levels.\",\n      techStack: [\"React\", \"TypeScript\", \"MapboxGL\"],\n      imgSrc: [\n        \"images/projects/flooding-1.png\",\n        \"images/projects/flooding-2.png\",\n      ],\n      projectUrl: \"https://github.com/bert-bae/flooding\",\n    },\n    {\n      title: \"Starwars-Scroll\",\n      description:\n        \"Starwars scroll mimmicks the popular StarWars film's introductions. The simple UI and backend is created using React, DynamoDB, and Lambdas. The site is deployed on S3 with the serverside being deployed using AWS SAM which uses Cloudformation. Create and edit your own story and if you want to share it, create a shareable link that you can send to your friends. The links are stored temporarily for 7 days allowing you to send messages to friends in a fun way.\",\n      techStack: [\n        \"NodeJs\",\n        \"React\",\n        \"DynamoDB\",\n        \"Serverless\",\n        \"AWS\",\n        \"Cloudfront/S3\",\n      ],\n      imgSrc: [\n        \"images/projects/starcrawl-1.png\",\n        \"images/projects/starcrawl-2.png\",\n        \"images/projects/starcrawl-3.png\",\n      ],\n      projectUrl: \"https://github.com/bert-bae/starwars-scroll\",\n    },\n    {\n      title: \"Scraper\",\n      description:\n        \"Scraper is a simple tool built while practicing Typescript. By supplying a YAML configuration file with the scraping paths, instructions, and the site URL (serverside rendered sites only as a part of this demo), Scraper will grab the data and format it in a clean JSON format based on the configuration provided. The YAML configuration allows you to create repeatable instructions for the program to pull information from a site in the same format every time. Perfect for repeating cron jobs to pull information from a site on a scheduled time or for one time uses.\",\n      techStack: [\"NodeJs\", \"TypeScript\", \"Jest\"],\n      imgSrc: [],\n      projectUrl: \"https://github.com/bert-bae/scraper\",\n    },\n    {\n      title: \"NuBrew\",\n      description:\n        \"NuBrew is an application that allows users to vote on their craft beer drinks and keep track of favorited drinks over time. As users expand their set of craft beers tried over time, the application will provide recommendations based on their previous likes based on IBU and category/style of drink. Of course, users need to be able to take that plunge and explore uncharted territories by trying something new by random as well, even if they really don't like that one style, taste changes over time!\\n\\nWe want to make it as easy as possible, so for those that bought their drinks with labels, the application was created while experimenting machine learning and label recognition using Google AutoML Vision.\\n\\nIn collaboration with Adam Romeo (https://adamromeo.dev/)\",\n      techStack: [\n        \"React-Native\",\n        \"PostgreSql\",\n        \"Knex\",\n        \"NodeJS\",\n        \"Express\",\n        \"SaSS\",\n        \"Google AutoML\",\n      ],\n      imgSrc: [\n        \"images/projects/nubrew.png\",\n        \"images/projects/nubrewExample.gif\",\n        \"images/projects/nubrewExample2.gif\",\n      ],\n      projectUrl: \"https://github.com/bert-bae/nubrew\",\n    },\n  ],\n\n  education: [\n    {\n      title: \"Lighthouse Labs\",\n      duration: \"Oct 2018 - Jan 2019\",\n      responsibilities: [\"Fullstack Web Development\"],\n    },\n    {\n      title: \"Simon Fraser University\",\n      duration: \"Sept 2012 - Dec 2015\",\n      responsibilities: [\"B.A. Psychology, Minor in Business Administrations\"],\n    },\n  ],\n\n  devSkills: [\n    \"REST\",\n    \"Amazon Web Services\",\n    \"Serverless\",\n    \"NodeJs\",\n    \"JavaScript\",\n    \"TypeScript\",\n    \"Express\",\n    \"DynamoDB\",\n    \"SQL\",\n    \"Jest/Mocha/Chai\",\n    \"HTML/CSS/SASS\",\n    \"React\",\n    \"NextJs\",\n    \"Stripe API\",\n    \"Webpack\",\n    \"JQuery\",\n  ],\n\n  otherSkills: [\n    \"Management\",\n    \"Problem Solving\",\n    \"Data analysis\",\n    \"Training & Development\",\n    \"Sales\",\n  ],\n\n  workExperience: [\n    {\n      title: \"Software Engineer\",\n      company: \"Rival Technologies\",\n      address: \"1199 W Hastings St #300, Vancouver, BC\",\n      duration: \"October 2019 - Current\",\n      responsibilities: [\n        \"Developing and maintaining backend services for event-driven microservice systems.\",\n        \"Working with serverless architecture with AWS using Lambdas, DynamoDB, and SQS to create fast, responsive, and highly scalable responding systems.\",\n        \"Working in teams to design, create, and deploy services across frontend and backend teams for continuous feature deliveries.\",\n        \"Supporting DevOps investigate production bugs, data corruption, and performance issues to fix issues impacting end users.\",\n        \"Supporting frontend development when required to help meet deadlines for feature development.\",\n        \"Setting up CI/CD pipeline configurations in CircleCI and Bitbucket.\",\n      ],\n    },\n    {\n      title: \"Software Developer\",\n      company: \"Colinkz Media\",\n      address: \"610 - 610 Granville Street, Vancouver, BC\",\n      duration: \"Jan 2019 - March 2020\",\n      responsibilities: [\n        \"Working with UI/UX designer wireframes to develop website designs and features.\",\n        \"Participating in business development discussions with the team for future development direction.\",\n        \"Interacting remotely or in-person with team members on daily Agile scrums.\",\n        \"Fullstack development of the company site and maintaining bug fixes, style revisions, and future development.\",\n        \"Implementing APIs to gather information to speed up event creation and marketing channels.\",\n        \"Implementing Stripe API to begin payment and market business channels.\",\n        \"Implementing React using Webpack and Babel to compile its implementation into a an existing Express and EJS project.\",\n      ],\n    },\n    {\n      title: \"Membership Experience Manager\",\n      company: \"YMCA of Greater Vancouver\",\n      address: \"282 West 49th Avenue, Vancouver, BC\",\n      duration: \"Feb 2017 - Oct 2018\",\n      responsibilities: [\n        \"Managing and delivering daily operation of the customer service and sales team to improve customer engagement.\",\n        \"Engaging across departments to improve satisfaction rating from 65-70% to 85-90% over 10 months.\",\n        \"Increasing average monthly membership aquisition and retention consistently in 2017 - 2018.\",\n        \"Planning and delivering on-going customer service and conflict resolution training, improving conflict resolution with customers\",\n        \"Developing spreadsheet tools to automate accurate scheduling, expense tracking, and sales goal generation to generate catered sales targets for team members\",\n        \"Active problem solving to resolve issues across the facility with staff, customers, and other departments.\",\n      ],\n    },\n  ],\n\n  volunteerExperience: [\n    {\n      title: \"YAC Council\",\n      company: \"YMCA of Greater Vancouver\",\n      address: \"Vancouver, BC\",\n      duration: \"Apr 2016 – Oct 2018\",\n      responsibilities: [],\n    },\n    {\n      title: \"Peer Health Educator\",\n      company: \"Simon Fraser University\",\n      address: \"Burnaby, BC\",\n      duration: \"Sep 2014 – Mar 2016\",\n      responsibilities: [],\n    },\n    {\n      title: \"Wildlife Conservation\",\n      company: \"International Volunteer HQ (NPO)\",\n      address: \"Ambalangoda, Sri Lanka\",\n      duration: \"Jul 2014 – Aug 2014  \",\n      responsibilities: [],\n    },\n    {\n      title: \"Tutor\",\n      company: \"International Volunteer HQ (NPO)\",\n      address: \"Faridabad, India\",\n      duration: \"Jun 2014 – Jul 2014\",\n      responsibilities: [],\n    },\n  ],\n\n  interests: [\n    \"Rock climbing\",\n    \"Hiking\",\n    \"Camping\",\n    \"Swimming\",\n    \"Travelling\",\n    \"Learning\",\n  ],\n};\n"],"sourceRoot":""}